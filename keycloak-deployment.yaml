apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: keycloak
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: default
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:14.0.0
          env:
            - name: KEYCLOAK_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: admin-credentials
            - name: KEYCLOAK_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: admin-credentials
            - name: PROXY_ADDRESS_FORWARDING
              value: "true"
            - name: DB_VENDOR
              value: mysql
            - name: DB_ADDR
              value: 127.0.0.1
            - name: DB_DATABASE
              value: auth_db
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: cloudsql-db-credentials
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: cloudsql-db-credentials
            - name: JAVA_OPTS_APPEND
              value: -Dkeycloak.profile.feature.admin_fine_grained_authz=enabled
            - name: JGROUPS_DISCOVERY_PROTOCOL
              value: kubernetes.KUBE_PING
            - name: JGROUPS_DISCOVERY_PROPERTIES
              value: port_range=0,dump_requests=true
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          readinessProbe:
            httpGet:
              path: /auth/realms/master
              port: 8080
        # Cloud SQL Auth proxy.
        # For details, see https://cloud.google.com/sql/docs/mysql/connect-kubernetes-engine
        - name: cloud-sql-proxy
          # It is recommended to use the latest version of the Cloud SQL proxy
          # Make sure to update on a regular schedule!
          image: gcr.io/cloudsql-docker/gce-proxy:1.17
          command:
            - "/cloud_sql_proxy"

            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            - "-ip_address_types=PRIVATE"

            # Replace DB_PORT with the port the proxy should listen on
            # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
            - "-instances=caper-adhoc-playground:asia-east1:keycloak-demo-sql-2=tcp:3306"

            # [START cloud_sql_proxy_k8s_volume_mount]
            # This flag specifies where the service account key can be found
            - "-credential_file=/secrets/service-account.json"
          securityContext:
            # The default Cloud SQL proxy image runs as the
            # "nonroot" user and group (uid: 65532) by default.
            runAsNonRoot: true
          volumeMounts:
            - name: sql-sa-secret
              mountPath: /secrets/
              readOnly: true
              # [END cloud_sql_proxy_k8s_volume_mount]
          # Resource configuration depends on an application's requirements. You
          # should adjust the following values based on what your application
          # needs. For details, see https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            requests:
              # The proxy's memory use scales linearly with the number of active
              # connections. Fewer open connections will use less memory. Adjust
              # this value based on your application's requirements.
              memory: "500Mi"
              # The proxy's CPU use scales linearly with the amount of IO between
              # the database and the application. Adjust this value based on your
              # application's requirements.
              cpu: "0.5"
      # [START cloud_sql_proxy_k8s_volume_secret]
      volumes:
        - name: sql-sa-secret
          secret:
            secretName: cloudsql-instance-credentials
      # [END cloud_sql_proxy_k8s_volume_secret]
